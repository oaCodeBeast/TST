@model TST.DAL.TSTDepartment

@{
    ViewBag.Title = "Add a Department";
}



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()



    <div class="col-md-6 side-tb-wrapper col-md-offset-3">
        <div class="side-tb-entry">
            <div class="side-tb-header">
          
                <h2>@ViewBag.Title</h2>


            </div>
       
            <div class="side-tb-body-form">

                <div class="form-group side-tb-input">
                    @Html.LabelFor(model => model.DepartmentName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.DepartmentName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DepartmentName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group side-tb-input">
                    @Html.LabelFor(model => model.DepartmentDescription, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.DepartmentDescription, new { @class = "form-control side-tb-textarea", cols = "40", rows = "3"  })
                        @Html.ValidationMessageFor(model => model.DepartmentDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="side-tb-footer">


                <input type="submit" value="Create" class="btn btn-success" />
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
                
            </div>
        </div>


    </div>
    <div class="clearfix"></div>



    @*<div class="form-horizontal">
        <h4>TSTDepartment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.DepartmentName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DepartmentName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentDescription, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.DepartmentDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DepartmentDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>*@
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
