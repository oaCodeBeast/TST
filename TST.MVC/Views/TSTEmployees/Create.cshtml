@model TST.DAL.TSTEmployee

@{
    ViewBag.Title = "Create";
}
<div class="frm-wrapper">
    <h2>Please enter basic info</h2>


    @using (Html.BeginForm("Create", "TSTEmployees"))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="frm-inner">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.EmpFname, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.EmpFname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmpFname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EmpLname, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.EmpLname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmpLname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-4">Department</label>
                                        <div class="col-md-8">
                        @Html.DropDownList("DepartmentID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EmpCity, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.EmpCity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmpCity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EmpState, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.EmpState, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmpState, "", new { @class = "text-danger" })
                    </div>
                </div>





                <div class="form-group">
                    @Html.LabelFor(model => model.EmpDateOfBirth, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.EmpDateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmpDateOfBirth, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.EmpPhone, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.EmpPhone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmpPhone, "", new { @class = "text-danger" })
                    </div>
                </div>




                <div class="form-group">
                    <div class="col-md-offset-4 col-md-8">
                        <div>
                            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
                        </div>
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
            

        </div>
    }
    </div>
    
<div class="clearfix"></div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function() {
            $("#EmpDateOfBirth").datepicker({
            
  
                changeYear: true,
                showButtonPanel: true,
                yearRange: "1995:2016"
                
            
            });   
        });
    </script>

}
