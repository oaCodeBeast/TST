@model TST.DAL.TSTEmployee

@{
    ViewBag.Title = "Edit " + Model.EmpFname;
}



    @using (Html.BeginForm("Edit", "TSTEmployees"))
    {<div class="frm-wrapper">
        <h2>Edit @Model.EmpFname 's details</h2>

        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.EmpID)
            @Html.HiddenFor(model => model.EmpEmail)
            @Html.HiddenFor(model => model.EmpDateOfHire)
            @Html.HiddenFor(model => model.EmpStatusID)
            @Html.HiddenFor(model => model.EmpPhoto)
            @Html.HiddenFor(model => model.EmpUserID)
            <div class="form-group">
                @Html.LabelFor(model => model.EmpFname, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.EmpFname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmpFname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmpLname, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.EmpLname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmpLname, "", new { @class = "text-danger" })
                </div>
            </div>
            @if(Model.DepartmentID == 6)
            {

                @Html.HiddenFor(model => model.DepartmentID)
            }
            else
            {
                <div class="form-group">
                        <label class="control-label col-md-4">Department</label>
                    <div class="col-md-8">
                        @Html.DropDownList("DepartmentID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
                    </div>
                </div>

            }
       
        

            <div class="form-group">
                @Html.LabelFor(model => model.EmpCity, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.EmpCity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmpCity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmpState, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.EmpState, TST.MVC.Controllers.TSTEmployeesController.GetProvincesList(), new { @class = "form-control", @size=5 })
                    @Html.ValidationMessageFor(model => model.EmpState, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.EmpDateOfBirth, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.EmpDateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmpDateOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.EmpPhone, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.EmpPhone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmpPhone, "", new { @class = "text-danger" })
                </div>
            </div>

      

            <div class="form-group">
                <div class="col-md-offset-2 col-md-8">
                  
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-success" })
                 
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>

        </div>
    </div>


        <div class="clearfix"></div>
    }



    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

        <script>
            $(function () {
                $("#EmpDateOfBirth").datepicker({

                    changeYear: true,
                    showButtonPanel: true,
                    yearRange: "1970:2000"
                });
               
            });
        </script>


    }
