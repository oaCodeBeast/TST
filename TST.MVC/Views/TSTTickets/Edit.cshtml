@model TST.DAL.TSTTicket

@{
    ViewBag.Title = "Edit User Ticket: " + Model.GetUniqueId;
}

<div class="frm-wrapper">
    <h2>@ViewBag.Title</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="frm-inner">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.TicketID)
                @Html.HiddenFor(model => model.SubmittedByID)
                @Html.HiddenFor(model => model.TSTEmployee)
                @Html.HiddenFor(model => model.TicketSubmitted)
                @Html.HiddenFor(model => model.TicketResolved)
                @Html.HiddenFor(model => model.Image)
                <div class="form-group">
                    @Html.LabelFor(model => model.TicketSubject, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.TicketSubject, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TicketSubject, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TicketDescription, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.TicketDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TicketDescription, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.TechID, "Tech", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("TechID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TechID, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.TicketStatusID, "Ticket Status", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("TicketStatusID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TicketStatusID, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.PriorityID, "Priority Level", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("PriorityID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PriorityID, "", new { @class = "text-danger" })
                    </div>
                </div>

                


                <div class="tech-notes">
                    <h2>Tech Notes</h2>
                    <div class="col-md-10 col-md-offset-1" id="notes">
                        @foreach (var note in Model.TSTTechNotes)
                        {
                            <div class="col-md-10 tech-note">
                                <p class="tech-note-note">
                                    @note.Notation
                                </p>
                                <p class="tech-note-date">
                                    @string.Format("{0:g}", note.NotationDate)
                                </p>
                            </div>
                            <div class="col-md-2 tech-note-tech">
                                <img class="tech-note-tech-img" src="~/Content/TSTUserImages/@note.TSTEmployee.EmpPhoto" />
                            </div>
                          
                               
                          
                           
                        }

                    </div>



                    <div class="controls col-md-10 col-md-offset-1">


                     
                       
                            <textarea class="col-md-10 note-text" id="noteText"></textarea>
                     
                        <input type="button" value="Add Note" id="btnAddNote" class="btn btn-success" />
                    </div>
                    <div class="clearfix"></div>
                </div>

                <div class="form-group">

                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
                    <input type="submit" value="Save" class="btn btn-success" />
                </div>
            </div>
        </div>
    }
    <div class="clearfix"></div>
</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")


        <script>
            $(function () {
                //assign the click function to the button above

                $("#btnAddNote").click(function () {
                    //console.log("1");

                    var note = $("#noteText").val();
                    //when addint the note during the asynch call add this not information from the notes div

                    $.ajax({
                        //url: /Controller/AddTechNote?ticketid=x&note
                        url: "/TSTTickets/AddTechNote?ticketId=@Model.TicketID&note=" + note, success: function (data) {
                            //display the new note at the bottom of the existing list
                            //of notes- no formatting here, the UI doesn't really know whats going on.

                            $("#notes").append("<p>" + data.TechNotes + " by" + data.Tech + " on " + data.Date + "</p>");
                            
                            //clear the notes text area
                            $("#noteText").val("");
                            $("#notes").load(location.href + " #notes>*", "");
                        }

                    });

                });
            });

        </script>
    }
